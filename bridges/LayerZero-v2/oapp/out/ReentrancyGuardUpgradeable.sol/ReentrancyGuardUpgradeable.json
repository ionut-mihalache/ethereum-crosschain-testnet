{"abi":[{"type":"event","name":"Initialized","inputs":[{"name":"version","type":"uint8","indexed":false,"internalType":"uint8"}],"anonymous":false}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"events\":{\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":\"ReentrancyGuardUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[\":@layerzerolabs/lz-evm-messagelib-v2/=node_modules/@layerzerolabs/lz-evm-messagelib-v2/\",\":@layerzerolabs/lz-evm-protocol-v2/=node_modules/@layerzerolabs/lz-evm-protocol-v2/\",\":@layerzerolabs/lz-evm-v1-0.7/=node_modules/@layerzerolabs/lz-evm-v1-0.7/\",\":@openzeppelin/contracts-upgradeable/=node_modules/@openzeppelin/contracts-upgradeable/\",\":@openzeppelin/contracts/=node_modules/@openzeppelin/contracts/\",\":ds-test/=/home/rares/LayerZero-v2/lib/forge-std/lib/ds-test/src/\",\":forge-std/=/home/rares/LayerZero-v2/lib/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":solidity-bytes-utils/=node_modules/solidity-bytes-utils/\"]},\"sources\":{\"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"node_modules/@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0x2025ccf05f6f1f2fd4e078e552836f525a1864e3854ed555047cd732320ab29b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d27f4b23c2dee42394aebaf42bf238285230f472dfd3282a39c3f000ec28214f\",\"dweb:/ipfs/QmQa3DnvccwdWJeWrjgXPnFMTWbzWQWR39hVqC7eEwo2PC\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.22+commit.4fc1097e"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"uint8","name":"version","type":"uint8","indexed":false}],"type":"event","name":"Initialized","anonymous":false}],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@layerzerolabs/lz-evm-messagelib-v2/=node_modules/@layerzerolabs/lz-evm-messagelib-v2/","@layerzerolabs/lz-evm-protocol-v2/=node_modules/@layerzerolabs/lz-evm-protocol-v2/","@layerzerolabs/lz-evm-v1-0.7/=node_modules/@layerzerolabs/lz-evm-v1-0.7/","@openzeppelin/contracts-upgradeable/=node_modules/@openzeppelin/contracts-upgradeable/","@openzeppelin/contracts/=node_modules/@openzeppelin/contracts/","ds-test/=/home/rares/LayerZero-v2/lib/forge-std/lib/ds-test/src/","forge-std/=/home/rares/LayerZero-v2/lib/forge-std/src/","hardhat-deploy/=node_modules/hardhat-deploy/","solidity-bytes-utils/=node_modules/solidity-bytes-utils/"],"optimizer":{"enabled":true,"runs":20000},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"node_modules/@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol":"ReentrancyGuardUpgradeable"},"evmVersion":"paris","libraries":{}},"sources":{"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"keccak256":"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794","urls":["bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e","dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv"],"license":"MIT"},"node_modules/@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol":{"keccak256":"0x2025ccf05f6f1f2fd4e078e552836f525a1864e3854ed555047cd732320ab29b","urls":["bzz-raw://d27f4b23c2dee42394aebaf42bf238285230f472dfd3282a39c3f000ec28214f","dweb:/ipfs/QmQa3DnvccwdWJeWrjgXPnFMTWbzWQWR39hVqC7eEwo2PC"],"license":"MIT"},"node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":{"keccak256":"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422","urls":["bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b","dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq"],"license":"MIT"}},"version":1},"ast":{"absolutePath":"node_modules/@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol","id":65529,"exportedSymbols":{"Initializable":[65315],"ReentrancyGuardUpgradeable":[65528]},"nodeType":"SourceUnit","src":"112:3571:108","nodes":[{"id":65445,"nodeType":"PragmaDirective","src":"112:23:108","nodes":[],"literals":["solidity","^","0.8",".0"]},{"id":65447,"nodeType":"ImportDirective","src":"136:63:108","nodes":[],"absolutePath":"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","nameLocation":"-1:-1:-1","scope":65529,"sourceUnit":65316,"symbolAliases":[{"foreign":{"id":65446,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65315,"src":"144:13:108","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":65528,"nodeType":"ContractDefinition","src":"952:2730:108","nodes":[{"id":65453,"nodeType":"VariableDeclaration","src":"1768:41:108","nodes":[],"constant":true,"mutability":"constant","name":"_NOT_ENTERED","nameLocation":"1793:12:108","scope":65528,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":65451,"name":"uint256","nodeType":"ElementaryTypeName","src":"1768:7:108","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":65452,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1808:1:108","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"id":65456,"nodeType":"VariableDeclaration","src":"1815:37:108","nodes":[],"constant":true,"mutability":"constant","name":"_ENTERED","nameLocation":"1840:8:108","scope":65528,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":65454,"name":"uint256","nodeType":"ElementaryTypeName","src":"1815:7:108","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":65455,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1851:1:108","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"id":65458,"nodeType":"VariableDeclaration","src":"1859:23:108","nodes":[],"constant":false,"mutability":"mutable","name":"_status","nameLocation":"1875:7:108","scope":65528,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":65457,"name":"uint256","nodeType":"ElementaryTypeName","src":"1859:7:108","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"id":65467,"nodeType":"FunctionDefinition","src":"1889:111:108","nodes":[],"body":{"id":65466,"nodeType":"Block","src":"1949:51:108","nodes":[],"statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":65463,"name":"__ReentrancyGuard_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65477,"src":"1959:32:108","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":65464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1959:34:108","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":65465,"nodeType":"ExpressionStatement","src":"1959:34:108"}]},"implemented":true,"kind":"function","modifiers":[{"id":65461,"kind":"modifierInvocation","modifierName":{"id":65460,"name":"onlyInitializing","nameLocations":["1932:16:108"],"nodeType":"IdentifierPath","referencedDeclaration":65260,"src":"1932:16:108"},"nodeType":"ModifierInvocation","src":"1932:16:108"}],"name":"__ReentrancyGuard_init","nameLocation":"1898:22:108","parameters":{"id":65459,"nodeType":"ParameterList","parameters":[],"src":"1920:2:108"},"returnParameters":{"id":65462,"nodeType":"ParameterList","parameters":[],"src":"1949:0:108"},"scope":65528,"stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"id":65477,"nodeType":"FunctionDefinition","src":"2006:109:108","nodes":[],"body":{"id":65476,"nodeType":"Block","src":"2076:39:108","nodes":[],"statements":[{"expression":{"id":65474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":65472,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65458,"src":"2086:7:108","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":65473,"name":"_NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65453,"src":"2096:12:108","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2086:22:108","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":65475,"nodeType":"ExpressionStatement","src":"2086:22:108"}]},"implemented":true,"kind":"function","modifiers":[{"id":65470,"kind":"modifierInvocation","modifierName":{"id":65469,"name":"onlyInitializing","nameLocations":["2059:16:108"],"nodeType":"IdentifierPath","referencedDeclaration":65260,"src":"2059:16:108"},"nodeType":"ModifierInvocation","src":"2059:16:108"}],"name":"__ReentrancyGuard_init_unchained","nameLocation":"2015:32:108","parameters":{"id":65468,"nodeType":"ParameterList","parameters":[],"src":"2047:2:108"},"returnParameters":{"id":65471,"nodeType":"ParameterList","parameters":[],"src":"2076:0:108"},"scope":65528,"stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"id":65488,"nodeType":"ModifierDefinition","src":"2492:103:108","nodes":[],"body":{"id":65487,"nodeType":"Block","src":"2516:79:108","nodes":[],"statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":65480,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65503,"src":"2526:19:108","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":65481,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2526:21:108","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":65482,"nodeType":"ExpressionStatement","src":"2526:21:108"},{"id":65483,"nodeType":"PlaceholderStatement","src":"2557:1:108"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":65484,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65511,"src":"2568:18:108","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":65485,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2568:20:108","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":65486,"nodeType":"ExpressionStatement","src":"2568:20:108"}]},"documentation":{"id":65478,"nodeType":"StructuredDocumentation","src":"2121:366:108","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"name":"nonReentrant","nameLocation":"2501:12:108","parameters":{"id":65479,"nodeType":"ParameterList","parameters":[],"src":"2513:2:108"},"virtual":false,"visibility":"internal"},{"id":65503,"nodeType":"FunctionDefinition","src":"2601:287:108","nodes":[],"body":{"id":65502,"nodeType":"Block","src":"2640:248:108","nodes":[],"statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":65494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":65492,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65458,"src":"2733:7:108","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":65493,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65456,"src":"2744:8:108","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2733:19:108","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5265656e7472616e637947756172643a207265656e7472616e742063616c6c","id":65495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2754:33:108","typeDescriptions":{"typeIdentifier":"t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","typeString":"literal_string \"ReentrancyGuard: reentrant call\""},"value":"ReentrancyGuard: reentrant call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","typeString":"literal_string \"ReentrancyGuard: reentrant call\""}],"id":65491,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2725:7:108","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":65496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2725:63:108","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":65497,"nodeType":"ExpressionStatement","src":"2725:63:108"},{"expression":{"id":65500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":65498,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65458,"src":"2863:7:108","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":65499,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65456,"src":"2873:8:108","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2863:18:108","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":65501,"nodeType":"ExpressionStatement","src":"2863:18:108"}]},"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"2610:19:108","parameters":{"id":65489,"nodeType":"ParameterList","parameters":[],"src":"2629:2:108"},"returnParameters":{"id":65490,"nodeType":"ParameterList","parameters":[],"src":"2640:0:108"},"scope":65528,"stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"id":65511,"nodeType":"FunctionDefinition","src":"2894:209:108","nodes":[],"body":{"id":65510,"nodeType":"Block","src":"2932:171:108","nodes":[],"statements":[{"expression":{"id":65508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":65506,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65458,"src":"3074:7:108","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":65507,"name":"_NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65453,"src":"3084:12:108","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3074:22:108","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":65509,"nodeType":"ExpressionStatement","src":"3074:22:108"}]},"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"2903:18:108","parameters":{"id":65504,"nodeType":"ParameterList","parameters":[],"src":"2921:2:108"},"returnParameters":{"id":65505,"nodeType":"ParameterList","parameters":[],"src":"2932:0:108"},"scope":65528,"stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"id":65522,"nodeType":"FunctionDefinition","src":"3282:107:108","nodes":[],"body":{"id":65521,"nodeType":"Block","src":"3346:43:108","nodes":[],"statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":65519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":65517,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65458,"src":"3363:7:108","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":65518,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65456,"src":"3374:8:108","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3363:19:108","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":65516,"id":65520,"nodeType":"Return","src":"3356:26:108"}]},"documentation":{"id":65512,"nodeType":"StructuredDocumentation","src":"3109:168:108","text":" @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."},"implemented":true,"kind":"function","modifiers":[],"name":"_reentrancyGuardEntered","nameLocation":"3291:23:108","parameters":{"id":65513,"nodeType":"ParameterList","parameters":[],"src":"3314:2:108"},"returnParameters":{"id":65516,"nodeType":"ParameterList","parameters":[{"constant":false,"id":65515,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":65522,"src":"3340:4:108","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":65514,"name":"bool","nodeType":"ElementaryTypeName","src":"3340:4:108","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3339:6:108"},"scope":65528,"stateMutability":"view","virtual":false,"visibility":"internal"},{"id":65527,"nodeType":"VariableDeclaration","src":"3654:25:108","nodes":[],"constant":false,"documentation":{"id":65523,"nodeType":"StructuredDocumentation","src":"3395:254:108","text":" @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"},"mutability":"mutable","name":"__gap","nameLocation":"3674:5:108","scope":65528,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage","typeString":"uint256[49]"},"typeName":{"baseType":{"id":65524,"name":"uint256","nodeType":"ElementaryTypeName","src":"3654:7:108","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":65526,"length":{"hexValue":"3439","id":65525,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3662:2:108","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"49"},"nodeType":"ArrayTypeName","src":"3654:11:108","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage_ptr","typeString":"uint256[49]"}},"visibility":"private"}],"abstract":true,"baseContracts":[{"baseName":{"id":65449,"name":"Initializable","nameLocations":["1000:13:108"],"nodeType":"IdentifierPath","referencedDeclaration":65315,"src":"1000:13:108"},"id":65450,"nodeType":"InheritanceSpecifier","src":"1000:13:108"}],"canonicalName":"ReentrancyGuardUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":65448,"nodeType":"StructuredDocumentation","src":"201:750:108","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"linearizedBaseContracts":[65528,65315],"name":"ReentrancyGuardUpgradeable","nameLocation":"970:26:108","scope":65529,"usedErrors":[],"usedEvents":[65161]}],"license":"MIT"},"id":108}